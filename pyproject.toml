[tool.poetry]
name = "ai-music-composer"
version = "0.1.0"
description = "An intelligent music composition system that generates original musical pieces using artificial intelligence"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.scripts]
composer = "src.composer_cli:main"

[tool.poetry.dependencies]
python = "^3.9"
numpy = "^1.21.0"
scipy = "^1.7.0"
pretty-midi = "^0.2.9"
midiutil = "^1.2.1"
music21 = "^7.3.3"
torch = "^1.9.0"
tqdm = "^4.62.0"
neo4j = "^5.14.0"
neomodel = "^5.2.1"
python-rtmidi = "^1.5.6"
click = "^8.1.7"
rich = "^13.7.0"
mido = "^1.3.3"

[tool.poetry.group.dev.dependencies]
pytest = "^6.2.5"
black = "^24.1.1"
flake8 = "^7.0.0"
flake8-docstrings = "^1.7.0"
flake8-bugbear = "^24.1.17"
pre-commit = "^3.6.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
^/tests/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203",  # Whitespace before ':' (conflicts with Black)
    "W503",  # Line break before binary operator (conflicts with Black)
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
]
max-complexity = 10
docstring-convention = "google"
per-file-ignores = [
    "__init__.py:D104",  # Missing docstring in public package
    "tests/*:D100,D101,D102,D103",  # Missing docstrings in tests
]
